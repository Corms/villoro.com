# --------------------------------------------------------------------------------------------------
# Basic metadata
# --------------------------------------------------------------------------------------------------
code: pypi
title: Creating Python packages
date: "2019-03-21"
image: pypi_square.jpg
highlight: True

tags:
  - Python

tags_filter:
  - Python

# --------------------------------------------------------------------------------------------------
# Extra info. This will add a button with href to the url
# --------------------------------------------------------------------------------------------------
link: 
  text: PYPI docs
  url: https://packaging.python.org/tutorials/packaging-projects/


# --------------------------------------------------------------------------------------------------
# Content
# --------------------------------------------------------------------------------------------------
brief_markdown: |
  Brief


content_markdown: |


  ## 1. Create a python package

  To work with python you only need a `.py` file. However if you are creating a package you need to follow a concrete structure and include some needed files.

  Before creating your project, I suggest you check if the name you want to use exists:

  ```sh
  pip search package_name
  ```

  ### 1.1. Structure your project


  ### 1.2. Create the package

  ```sh
  python setup.py sdist bdist_wheel
  ```

  ## 2. Upload the package

  ### 2.1. Requirements

  When you run `pip install package` you are actually downloading it from [pypi](https://pypi.org/). There is also [test.pypi](https://test.pypi.org/) for testing purpouses. So you will need to register:
  
  * [test.pypi](https://test.pypi.org/account/register/)
  * [pypi](https://pypi.org/account/register/)

  To upload the packages I suggest you use `twine`. You can install it with:

  ```sh
  pip install twine
  ```

  ### 2.2. Uploading a package to test.pypi

  You can run the next command which will upload all packages created in the `dist` folder:

  ```sh
  python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*
  ```

  > The first time you run this command you will be asked to log in. Use the credentials from the previous step.

  After uploading the package you can download it to test if it is working as expected:

  ```sh
  pip install --index-url https://test.pypi.org/simple/ package_name

  # You can specify the version with
  pip install --index-url https://test.pypi.org/simple/ package_name==X.X.X
  ```

  ## 2.3. Uploading a package to pypi

  In order to upload the package to `pypi` the process is very similar to the step before:

  ```sh
  python -m twine upload dist/*
  ```

  And to install it you can simply run:

  ```sh
  pip install package
  ```

  > Well done, you now have your first python package uploaded to **pypi**.

  ### Include packages
  ### Include non python files
